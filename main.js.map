{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/feedback/feedback.component.css","webpack:///./src/app/feedback/feedback.component.html","webpack:///./src/app/feedback/feedback.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/my-profile/my-profile.component.css","webpack:///./src/app/my-profile/my-profile.component.html","webpack:///./src/app/my-profile/my-profile.component.ts","webpack:///./src/app/profile.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".navbar ul.ml-auto li.nav-item {margin-right: 10px;}\\n.header-menu{background: #d5dde5;}\\n.horizontal-menu .menu-items{background: #4c5e70;color: #fff;font-weight: 500;}\\n.horizontal-menu{padding-right: 0;padding-left: 0;}\\n.horizontal-menu .menu-items .menu{padding: 9px 0 9px;}\\n.horizontal-menu .menu-items .menu a{color: #fff;padding: 11px;}\\n.horizontal-menu .menu-items .menu span{margin-right: 10px;}\\n.navbar{margin-bottom: 0;}\\n.active-link{background:#2fc0e9ed;}\\n.header-menu .navbar{padding:0}\"","module.exports = \"<link rel='stylesheet' href='https://use.fontawesome.com/releases/v5.7.0/css/all.css' integrity='sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ' crossorigin='anonymous'>\\n<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\\\">\\n\\n\\n\\n<div class=\\\"fullWidth\\\">\\n\\t<div class=\\\"header-menu\\\">\\n\\n<nav class=\\\"navbar navbar-expand-sm\\\">\\n<div class=\\\"logo\\\">\\n\\t\\t<img src=\\\"./assets/white-logo.png\\\" alt=\\\"eclerx\\\" title=\\\"eclerx\\\">\\n\\t</div>\\n\\t<ul class=\\\"nav navbar-nav ml-auto\\\">\\n\\t\\t<li class=\\\"nav-item\\\">Hi,Harapriya</li>\\n\\t\\t<li class=\\\"nav-item\\\">Logout</li>\\n\\t</ul>\\n</nav>\\n</div>\\n<div class=\\\"horizontal-menu col-md-2\\\">\\n<div class=\\\"menu-items\\\">\\n\\t<div class=\\\"menu\\\"><a routerLink=\\\"/my-profile\\\" routerLinkActive=\\\"active-link\\\"><span><i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i></span> My profile</a></div>\\n\\t<div class=\\\"menu\\\"><a routerLink=\\\"/feedback\\\" routerLinkActive=\\\"active-link\\\"><span><i class='fas fa-comment-alt'></i></span>Feedback</a></div>\\n</div>\\n</div>\\n\\t<div class=\\\"col-md-9\\\"><router-outlet></router-outlet></div>\\n</div>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n  \n\n constructor() {\n}\n\nngOnInit() {\n  \n}\n\n\n\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { FormsModule } from '@angular/forms';\n//import { AppRoutingModule } from './app-routing.module';\n\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { routing } from './app.routing';\n//import { from } from 'rxjs';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    \n    MyProfileComponent,\n    FeedbackComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule,\n\tRouterModule.forRoot(\n            [\n\t\t\t//{ path: \"\", redirectTo:\"/my-profile\",pathMatch:full, component: MyProfileComponent}\n              { path: \"my-profile\", component: MyProfileComponent},\n              { path: \"feedback\", component: FeedbackComponent}\n            ]\n          )\n    ],\n  \n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule,Routes } from '@angular/router';\r\nimport { MyProfileComponent } from './my-profile/my-profile.component';\r\nimport { FeedbackComponent } from './feedback/feedback.component'\r\n\r\nconst appRoutes: Routes=[\r\n    {path:'my-profile', component: MyProfileComponent},\r\n    {path:'feedback',component: FeedbackComponent},\r\n    {path:'',pathMatch:'full',redirectTo:'all'}\r\n];\r\n export const routing= RouterModule.forRoot(appRoutes);\r\n\r\n\r\n\r\n","module.exports = \".clear{clear:both}\\r\\n.menu a{text-decoration: none;}\"","module.exports = \"<form>\\n    <div class=\\\"col-md-4\\\">\\n    \\n      <div><label>Program</label></div>\\n      <div><input type=\\\"text\\\" value=\\\"ABACUS\\\"></div>\\n    \\n      <div><label>SPM</label></div>\\n      <div>\\n        \\n        <select>\\n            <option>Select</option>\\n            <option>Kunal Chopra</option>\\n            <option>Shreekant Singh</option>\\n            <option>Manikanteswara Patro</option>\\n      </select>\\n    </div>\\n    \\n    \\n    </div>\\n    \\n    <div class=\\\"col-md-4\\\">\\n    \\n        <div><label>BLI</label></div>\\n        <div>\\n          \\n          <select>\\n              <option>Select</option>\\n              <option>CA Digital Analytics</option>\\n              <option>Consumer Analytics Support - CA</option>\\n              <option>CP&D Sku Operations Lead</option>\\n        </select>\\n      </div>\\n    \\n      <div><label>Manager</label></div>\\n      <div><input type=\\\"text\\\" value=\\\"Manager Name\\\"></div>\\n    \\n    \\n    </div>\\n    <div class=\\\"clear\\\"></div>\\n    \\n    <div class=\\\"clear\\\"></div>\\n    <button type=\\\"submit\\\"> Submit</button>\\n    </form>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"ui secondary  menu\\\">\\n  <a class=\\\"item\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">\\n    Login\\n  </a>\\n  <a class=\\\"item\\\" routerLink=\\\"/registration\\\" routerLinkActive=\\\"active\\\">\\n    Register\\n  </a>\\n  \\n  <div class=\\\"right menu\\\">\\n    <div class=\\\"item\\\">\\n      <div class=\\\"ui icon input\\\">\\n        <input type=\\\"text\\\" placeholder=\\\"Search...\\\">\\n        <i class=\\\"search link icon\\\"></i>\\n      </div>\\n    </div>\\n     <a class=\\\"item\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">\\n    Login\\n  </a>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".clear{clear:both}\\r\\n.menu a{text-decoration: none;}\\r\\n.form-group{margin: 20px;}\\r\\n.btn-primary{margin: 16px;background: #31b9e1;border: 1px solid #31b9e1;}\\r\\ntextarea{height: 163px !important;}\"","module.exports = \"\\n<!---<form class=\\\"form-group\\\" #empProfile=\\\"ngForm\\\" (ngSubmit)='onSubmit(empProfile.value)'>--->\\n    <form class=\\\"form-group\\\" #empProfile=\\\"ngForm\\\" >\\n    <!----<div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">{{error}}</div>\\n    <div *ngIf=\\\"success\\\" class=\\\"alert alert-success\\\">{{success}}</div>-->\\n    <div *ngFor=\\\"let emp of profiles;let i = index \\\" >\\n    \\n  <div class=\\\"col-md-6\\\">\\n  \\n    <div><label>Program</label></div>\\n    <div><input type=\\\"text\\\"  class=\\\"form-control\\\" value=\\\"ABACUS\\\" readonly></div>\\n    \\n    <div><label>Email</label></div>\\n    <div><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"emp.{{i}}.emp_email\\\" [(ngModel)]=\\\"emp.emp_email\\\" readonly></div>\\n  \\n   \\n  </div>\\n  \\n  <div class=\\\"col-md-6\\\">\\n  \\n    <div><label>Name</label></div>\\n    <div><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"emp.{{i}}.emp_name\\\"  [(ngModel)]=\\\"emp.emp_name\\\"></div>\\n    \\n    <div><label>Manager</label></div>\\n    <div><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"emp.{{i}}.emp_manager\\\" [(ngModel)]=\\\"emp.emp_manager\\\" ></div>\\n    \\n  \\n  </div>\\n  <div class=\\\"clear\\\"></div>\\n  <div class=\\\"col-md-12\\\">\\n  \\n    <div><label>BLI</label></div>\\n    <div>\\n      <textarea name=\\\"emp_bli\\\" class=\\\"form-control\\\"> \\n        {{emp.emp_bli}}\\n    \\n      </textarea>\\n  \\n  </div>\\n  \\n  </div >\\n  <div class=\\\"clear\\\"></div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"update\\\"  (click)=\\\"updateProfile(emp_name, id,emp_manager)\\\"> Update Profile</button>\\n</div>\\n\\n  </form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Profile } from '../profile';\nimport { ProfileService } from '../profile.service';\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n  \n  profiles: Profile[];\n  \n  error = '';\n  success = '';\n  //profile = new Profile('', 5);\n \n\n constructor(private profileService: ProfileService) {\n}\n\n\nngOnInit() {\n  this.getProfiles();\n \n}\n\n\n//fetch employee profiles\ngetProfiles(): void {\n  this.profileService.getAll().subscribe(\n    (res: Profile[]) => {\n      this.profiles = res;\n      \n    },\n    (err) => {\n      this.error = err;\n    }\n  );\n}\n//update employee profiles\nupdateProfile(emp_name, emp_manager, id) {\n this.resetErrors();\n//alert('ok');\n  this.profileService.update({emp_name: emp_name.value, emp_manager:emp_manager.value,id: +id })\n    .subscribe(\n      (res) => {\n        this.profiles    = res;\n        this.success = 'Updated successfully';\n      },\n      (err) => this.error = err\n    );\n}\n\n\n  private resetErrors(){\n    this.success = '';\n    this.error   = '';\n  }\n\n\n}\n\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Profile } from './profile';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n  baseUrl = 'http://localhost/api';\n\n  profiles: Profile[];\n  constructor(private http: HttpClient) { }\n\n  //fetch emp profile\n  getAll(): Observable<Profile[]> {\n    return this.http.get(`${this.baseUrl}/list`).pipe(\n      map((res) => {\n        this.profiles = res['data'];\n        return this.profiles;\n    }),\n    catchError(this.handleError));\n  }\n\n\n  //update emp profile\n  update(profile: Profile): Observable<Profile[]> {\n    return this.http.put(`${this.baseUrl}/update`, { data: profile })\n      .pipe(map((res) => {\n        const theProfile = this.profiles.find((item) => {\n          return +item['id'] === +profile['id'];\n        });\n        if (theProfile) {\n          theProfile['emp_name'] = +profile['emp_name'];\n          theProfile['emp_manager'] = profile['emp_manager'];\n        }\n        return this.profiles;\n      }),\n      catchError(this.handleError));\n  }\n\n\n\n  \n  private handleError(error: HttpErrorResponse) {\n    console.log(error);\n\n    // return an observable with a user friendly message\n    return throwError('Error! something went wrong.');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}